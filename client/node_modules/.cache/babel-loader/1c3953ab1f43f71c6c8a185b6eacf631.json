{"ast":null,"code":"import{createSelector}from\"reselect\";var COLLECTION_ID_MAP={sculptures:1,photography:2,paintings:3,sketches:4,prints:5};var selectGallery=function selectGallery(state){return state.gallery;};export var selectCollections=createSelector([selectGallery],function(gallery){return gallery.collections;});export var selectCollection=function selectCollection(collectionUrlParam){return createSelector([selectCollections],function(collections){return collections.find(function(collection){return collection.id===COLLECTION_ID_MAP[collectionUrlParam];});});};","map":{"version":3,"sources":["/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/redux/gallery/gallery.selectors.js"],"names":["createSelector","COLLECTION_ID_MAP","sculptures","photography","paintings","sketches","prints","selectGallery","state","gallery","selectCollections","collections","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,UAAU,CAAE,CADY,CAExBC,WAAW,CAAE,CAFW,CAGxBC,SAAS,CAAE,CAHa,CAIxBC,QAAQ,CAAE,CAJc,CAKxBC,MAAM,CAAE,CALgB,CAA1B,CAQA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAjB,EAAtB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGV,cAAc,CAC7C,CAACO,aAAD,CAD6C,CAE7C,SAACE,OAAD,QAAaA,CAAAA,OAAO,CAACE,WAArB,EAF6C,CAAxC,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,kBAAD,QAC9Bb,CAAAA,cAAc,CAAC,CAACU,iBAAD,CAAD,CAAsB,SAACC,WAAD,QAClCA,CAAAA,WAAW,CAACG,IAAZ,CACE,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBf,iBAAiB,CAACY,kBAAD,CAAnD,EADF,CADkC,EAAtB,CADgB,EAAzB","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst COLLECTION_ID_MAP = {\n  sculptures: 1,\n  photography: 2,\n  paintings: 3,\n  sketches: 4,\n  prints: 5,\n};\n\nconst selectGallery = (state) => state.gallery;\n\nexport const selectCollections = createSelector(\n  [selectGallery],\n  (gallery) => gallery.collections\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections.find(\n      (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n    )\n  );\n"]},"metadata":{},"sourceType":"module"}