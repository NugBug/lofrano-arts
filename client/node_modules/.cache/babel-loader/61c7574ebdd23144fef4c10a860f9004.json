{"ast":null,"code":"var _jsxFileName = \"/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component.jsx\";\nimport CustomButton from \"../custom-button/custom-button.component.jsx\";\nimport Spinner from \"../spinner/spinner.component.jsx\";\nimport { googleSignInStart, emailSignInStart, emailSignInSuccess, emailSignInFailure } from \"../../redux/user/user.actions.js\";\nimport \"./sign-in.styles.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      this.setState({\n        isLoading: true\n      });\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      console.log(email);\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    let loading;\n\n    if (this.state.isLoading) {\n      loading = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      });\n    } else {\n      loading = null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, loading, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password or Google account to make purchases\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  googleSignInStart: () => googleSignInStart(),\n  emailSignInStart: (email, password) => emailSignInStart({\n    email,\n    password\n  })\n};\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","Spinner","googleSignInStart","emailSignInStart","emailSignInSuccess","emailSignInFailure","SignIn","Component","constructor","props","handleSubmit","event","setState","isLoading","preventDefault","email","password","state","console","log","handleChange","value","name","target","render","loading","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component.jsx\";\nimport CustomButton from \"../custom-button/custom-button.component.jsx\";\nimport Spinner from \"../spinner/spinner.component.jsx\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n  emailSignInSuccess,\n  emailSignInFailure,\n} from \"../../redux/user/user.actions.js\";\n\nimport \"./sign-in.styles.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoading: false,\n    };\n  }\n\n  handleSubmit = async (event) => {\n    this.setState({ isLoading: true });\n    event.preventDefault();\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n    console.log(email);\n\n    emailSignInStart(email, password)\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n\n    let loading;\n    if (this.state.isLoading) {\n      loading = <Spinner />;\n    } else {\n      loading = null;\n    }\n\n    return (\n      <div className=\"sign-in\">\n        {loading}\n        <h2 className=\"title\">I already have an account</h2>\n        <span>\n          Sign in with your email and password or Google account to make\n          purchases\n        </span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">Sign In</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  googleSignInStart: () => googleSignInStart(),\n  emailSignInStart: (email, password) => emailSignInStart({ email, password }),\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}