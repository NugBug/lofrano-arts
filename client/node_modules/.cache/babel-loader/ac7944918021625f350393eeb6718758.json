{"ast":null,"code":"var _jsxFileName = \"/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/pages/gallery/gallery.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component.jsx\";\nimport CollectionPage from \"../collection/collection.component.jsx\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component.jsx\";\nimport { updateCollections } from \"../../redux/gallery/shops.actions.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils.js\"; // Wrap necessary components with spinner component\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass GalleryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      updateCollections(convertCollectionsSnapshotToMap(snapshot));\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gallery-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  updateCollections: collectionsMap => updateCollections(collectionsMap)\n};\nexport default connect(null, mapDispatchToProps)(GalleryPage);","map":{"version":3,"sources":["/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/pages/gallery/gallery.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","WithSpinner","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","GalleryPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","setState","render","match","path","mapDispatchToProps","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,0EAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,0DAAxB;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP,C,CAKA;;AACA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,WAAN,SAA0BX,KAAK,CAACY,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,OAAO,EAAE;AADH,KADgC;AAAA,SAKxCC,uBALwC,GAKd,IALc;AAAA;;AAOxCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAwB,KAAKW,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnChB,MAAAA,iBAAiB,CAACE,+BAA+B,CAACc,QAAD,CAAhC,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAHD;AAID;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AACQ,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAD5B;AAEE,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAYD;;AAjCuC;;AAoC1C,MAAMU,kBAAkB,GAAG;AACzBrB,EAAAA,iBAAiB,EAAGsB,cAAD,IAAoBtB,iBAAiB,CAACsB,cAAD;AAD/B,CAA3B;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,WAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component.jsx\";\nimport CollectionPage from \"../collection/collection.component.jsx\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component.jsx\";\nimport { updateCollections } from \"../../redux/gallery/shops.actions.js\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils.js\";\n\n// Wrap necessary components with spinner component\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass GalleryPage extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    \n    collectionRef.get().then(snapshot => {\n      updateCollections(convertCollectionsSnapshotToMap(snapshot));\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div className=\"gallery-page\">\n        <Route \n          exact path={`${match.path}`} \n          render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} \n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateCollections: (collectionsMap) => updateCollections(collectionsMap),\n};\n\nexport default connect(null, mapDispatchToProps)(GalleryPage);\n"]},"metadata":{},"sourceType":"module"}