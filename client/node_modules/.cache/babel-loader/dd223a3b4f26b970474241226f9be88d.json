{"ast":null,"code":"var _jsxFileName = \"/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { setCurrentUser } from \"./redux/user/user.actions.js\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors.js\";\nimport HomePage from \"./pages/homepage/homepage.component.jsx\";\nimport GalleryPage from \"./pages/gallery/gallery.component.jsx\";\nimport Header from \"./components/header/header.component.jsx\";\nimport Footer from \"./components/footer/footer.component.jsx\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.components copy.jsx\";\nimport Hero from \"./components/hero/hero.component.jsx\";\nimport CheckoutPage from \"./pages/checkout/checkout.component.jsx\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils.js\";\nimport { GlobalStyles } from \"./global.styles\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth); // This code will add new digital art collection data upon application mount\n      // Be sure to map state 'collectionsArray: selectCollectionsForPreview' to props and pass as prop\n      // Import 'addCollectionAndDocuments from firebase.utils.js\n      // Imprt selectCollectionsForPreview from gallery redux gallery.selector.js\n      //\n      // addCollecitonAndDocuments(\n      //   \"collections\",\n      //   collectionsArray.map(({ title, items }) => ({ title, items }))\n      // );\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GlobalStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Hero,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/homepage\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/gallery\",\n      component: GalleryPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/homepage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.location.pathname !== \"/\" ? \"footer-container\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray: selectCollectionsForPreview,\n\n});\nconst mapDispatchToProps = {\n  setCurrentUser: user => setCurrentUser(user)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/joshtanguay/Documents/Projects/react/lofrano-arts/src/App.js"],"names":["React","Switch","Route","Redirect","withRouter","connect","createStructuredSelector","setCurrentUser","selectCurrentUser","HomePage","GalleryPage","Header","Footer","SignInAndSignUpPage","Hero","CheckoutPage","auth","createUserProfileDocument","GlobalStyles","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","location","pathname","mapStateToProps","mapDispatchToProps","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { setCurrentUser } from \"./redux/user/user.actions.js\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors.js\";\nimport HomePage from \"./pages/homepage/homepage.component.jsx\";\nimport GalleryPage from \"./pages/gallery/gallery.component.jsx\";\nimport Header from \"./components/header/header.component.jsx\";\nimport Footer from \"./components/footer/footer.component.jsx\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.components copy.jsx\";\nimport Hero from \"./components/hero/hero.component.jsx\";\nimport CheckoutPage from \"./pages/checkout/checkout.component.jsx\";\nimport {\n  auth,\n  createUserProfileDocument,\n} from \"./firebase/firebase.utils.js\";\n\nimport { GlobalStyles } from \"./global.styles\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n\n      // This code will add new digital art collection data upon application mount\n      // Be sure to map state 'collectionsArray: selectCollectionsForPreview' to props and pass as prop\n      // Import 'addCollectionAndDocuments from firebase.utils.js\n      // Imprt selectCollectionsForPreview from gallery redux gallery.selector.js\n      //\n      // addCollecitonAndDocuments(\n      //   \"collections\",\n      //   collectionsArray.map(({ title, items }) => ({ title, items }))\n      // );\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <div className=\"content-wrap\">\n          <Header />\n          <GlobalStyles />\n          <Switch>\n            <Route exact path=\"/\" component={Hero} />\n            <Route exact path=\"/homepage\" component={HomePage} />\n            <Route path=\"/gallery\" component={GalleryPage} />\n            <Route exact path=\"/checkout\" component={CheckoutPage} />\n            <Route\n              exact\n              path=\"/signin\"\n              render={() =>\n                this.props.currentUser ? (\n                  <Redirect to=\"/homepage\" />\n                ) : (\n                  <SignInAndSignUpPage />\n                )\n              }\n            />\n          </Switch>\n        </div>\n        <div className={this.props.location.pathname !== \"/\" ? \"footer-container\" : \"\"}>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionsForPreview,\n});\n\nconst mapDispatchToProps = {\n  setCurrentUser: (user) => setCurrentUser(user),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}